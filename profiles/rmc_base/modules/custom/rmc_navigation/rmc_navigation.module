<?php

/**
 * @file
 * Module file for rmc_navigation.
 */

use Drupal\Core\Menu\MenuTreeParameters;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Url;

/**
 * Implements hook_page_top().
 */
function rmc_navigation_page_top(array &$page_top) {
  // Add custom styling to all pages.
  $page_top[] = [
    '#attached' => [
      'library' => [
        'rmc_navigation/rmc_navigation'
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function rmc_navigation_preprocess_html(array &$variables) {
  // Add custom class to body.
  $variables['attributes'] = new Attribute($variables['attributes']);
  $variables['attributes']->addClass(['masonry-layout']);
}

/**
 * Implements hook_local_tasks_alter().
 */
function rmc_navigation_local_tasks_alter(array &$local_tasks) {
  // Alter the secondary navigation tabs for taxonomy term pages.
  $local_tasks['entity.taxonomy_term.canonical']['title'] = new TranslatableMarkup('Overview');
  unset($local_tasks['entity.taxonomy_term.edit_form']);
}

/**
 * Implements hook_entity_display_build_alter().
 */
function rmc_navigation_entity_display_build_alter(array &$build, array $context) {
  // Only alter the display of rmc-group taxonomy terms.
  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
  $entity = $context['entity'];
  if ($entity->getEntityTypeId() !== 'taxonomy_term' || $entity->bundle() !== 'rmc_groups') {
    return;
  }

  // Do not display the body field.
  unset($build['description']);

  // Render custom dashboard panels.
  $group_type = $entity->getDescription();
  $build['rmc_group_panels']['#markup'] = \Drupal\rmc_navigation\Controller\RmcController::dashboard($group_type);
  // $build['rmc_group_panels']['#attached']['library'][] = 'rmc_navigation/rmc_navigation';
}

/**
 * Implements hook_toolbar_alter().
 */
function rmc_navigation_toolbar_alter(array &$items) {
  // Remove default toolbar menu items.
  unset($items['administration']);
  unset($items['home']);
  $items['user']['#wrapper_attributes']['style'] = 'float:right';
  $items['user']['weight'] = 20;
}

/**
 * Implements hook_toolbar().
 *
 * @see toolbar_toolbar()
 */
function rmc_navigation_toolbar() {
  // The 'Bulletins', 'Proposals', 'Meetings' & 'Documents' tabs are simple links without a tray.
  $items = [
    'rmc-bulletins' => [
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('Bulletins'),
        '#url' => Url::fromUri('internal:/bulletins'),
      ],
      '#weight' => 0,
    ],
    'rmc-proposals' => [
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('Proposals'),
        '#url' => Url::fromUri('internal:/proposals'),
      ],
      '#weight' => 1,
    ],
    'rmc-meetings' => [
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('Meetings'),
        '#url' => Url::fromUri('internal:/meetings'),
      ],
      '#weight' => 2,
    ],
    'rmc-documents' => [
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('Documents'),
        '#url' => Url::fromUri('internal:/documents'),
      ],
      '#weight' => 3,
    ],
  ];

  // @see toolbar_subtrees_jsonp()
  list($hash, $hash_cacheability) = _toolbar_get_subtrees_hash();
  $subtrees_attached['drupalSettings']['toolbar'] = [
    'subtreesHash' => $hash,
  ];

  $items['rmc-groups'] = [
    '#type' => 'toolbar_item',
    'tab' => [
      '#type' => 'link',
      '#title' => t('Groups'),
      '#url' => Url::fromRoute('system.admin'),
      '#attributes' => [
        // 'title' => t('Admin menu'),
        'class' => ['toolbar-icon', 'toolbar-icon-menu'],
        'data-drupal-subtrees' => '',
      ],
    ],
    'tray' => [
      // '#heading' => t('Administration menu'),
      '#attached' => $subtrees_attached,
      'toolbar_administration' => [
        '#pre_render' => [
          // Call custom function to process submenu items.
          'rmc_navigation_prerender_groups_tray',
        ],
        '#type' => 'container',
        '#attributes' => [
          'class' => array('toolbar-menu-administration'),
        ],
      ],
    ],
    '#weight' => -10,
  ];
  // $hash_cacheability->applyTo($items['administration']);

  return $items;
}

/**
 * @see toolbar_prerender_toolbar_administration_tray()
 */
function rmc_navigation_prerender_groups_tray(array $element) {
  /**
   * @todo Refactor to avoid manually switching this call on/off to populate menu link tree table.
   */
  // \Drupal::service('rmc_navigation.tree_storage')->defineLinks('rmc_groups');

  $menu_tree = \Drupal::service('rmc_navigation.taxonomy_tree');
  $parameters = new MenuTreeParameters();
  // $parameters->setMinDepth(2)->setMaxDepth(2)->onlyEnabledLinks();
  $manipulators = [
    [ 'callable' => 'menu.default_tree_manipulators:checkAccess' ],
    [ 'callable' => 'menu.default_tree_manipulators:generateIndexAndSort' ],
    [ 'callable' => 'toolbar_menu_navigation_links' ],
  ];

  // Add custom menu from our taxonomy to the toolbar tray.
  $tree = $menu_tree->load('rmc_groups', $parameters);
  $tree = $menu_tree->transform($tree, $manipulators);
  $element['administration_menu'] = $menu_tree->build($tree);

  return $element;
}
